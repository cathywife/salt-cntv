#自动加载配置文件
check file system.cfg path /usr/local/monit/etc/inc/system.cfg
	group system
	if changed sha1 checksum 
		then exec "/usr/local/monit/bin/monit -c /usr/local/monit/etc/monitrc reload"

#系统检查
{%- if pillar['desc'] is iterable %}
check system {% for description in pillar['desc'] -%}
	{{ description -}}
	{% endfor %}-{{ grains['id'] }}
{%- else %}
check system {{ grains['id'] }}
{%- endif %}
	group system
{%- if pillar['roles'] is iterable  %}
{%- if ("logstash-esNode" in pillar["roles"]) or ("logstash-esSearchNode" in pillar["roles"]) or ("logstash-esMonitorNode" in pillar["roles"]) %}
	if swap usage > 50% then alert
	if cpu usage (user) > 80% for 3 cycles then alert
	if cpu usage (system) > 80% for 3 cycles then alert
	if cpu usage (wait) > 80% for 3 cycles then alert

#磁盘空间
check filesystem root with path /
	group system
	if space usage > 95% then alert

check filesystem var with path /var
	group system
	if space usage > 95% then alert
{%- else %}
	if memory usage > 98% then alert
	if swap usage > 25% then alert
	if cpu usage (user) > 80% for 3 cycles then alert
	if cpu usage (system) > 80% for 3 cycles then alert
	if cpu usage (wait) > 80% for 3 cycles then alert

#磁盘空间
check filesystem root with path /
	group system
	if space usage > 80% then alert

check filesystem var with path /var
	group system
	if space usage > 80% then alert
{%- endif %}
{%- endif %}

#服务进程
check process sshd with pidfile /var/run/sshd.pid
	group system
	start program = "/etc/init.d/sshd start"
	stop program  = "/etc/init.d/sshd stop"
	IF 2 RESTARTS WITHIN 10 CYCLES THEN UNMONITOR

check process crond with pidfile /var/run/crond.pid
	group system
	start program = "/etc/init.d/crond start"
	stop  program = "/etc/init.d/crond stop; /usr/bin/killall crond"
	IF 2 RESTARTS WITHIN 10 CYCLES THEN UNMONITOR

check process rsyslog with pidfile /var/run/rsyslogd.pid
	group system
	start program = "/etc/init.d/rsyslog start"
	stop  program = "/etc/init.d/rsyslog stop; /usr/bin/killall rsyslogd"
	IF 2 RESTARTS WITHIN 10 CYCLES THEN UNMONITOR

{%- if pillar["roles"] is iterable %}
{%- if "baseA" in pillar["roles"] %}
check process nslcd with pidfile /var/run/nslcd/nslcd.pid
	group system
	start program = "/sbin/nslcd"
	stop program  = "/usr/bin/killall nslcd"

check process cntvCMS with pidfile /var/run/rsyncd_cntvCms.pid
	group system
	start program = "/usr/bin/rsyncCntvCms --daemon --config=/etc/cntvCms/rsyncd.conf --port 7878"
	stop  program = "/usr/bin/killall rsyncCntvCms"
	if failed port 7878 then restart
	IF 2 RESTARTS WITHIN 10 CYCLES THEN UNMONITOR
{%- endif %}
{%- endif %}

#check process snmpd with pidfile /var/run/snmpd
#	start program = "/etc/init.d/snmpd start"
#	stop program  = "/etc/init.d/snmpd stop"
#	if failed host 192.168.1.1 port 161 type udp then restart
#	if failed host 192.168.1.1 port 199 type tcp then restart
#	if 5 restarts within 5 cycles then timeout

#check process xinetd with pidfile /var/run/xinetd.pid 
#	group system
#	start program = "/etc/init.d/xinetd start"
#	stop  program = "/etc/init.d/xinetd stop"
#	if 5 restarts within 5 cycles then timeout
